{"id":3606,"date":"2021-06-29T14:42:39","date_gmt":"2021-06-29T14:42:39","guid":{"rendered":"https:\/\/wirid-lab.umng.edu.co\/?p=3606"},"modified":"2021-07-14T04:20:55","modified_gmt":"2021-07-14T04:20:55","slug":"nrf24l01-communication","status":"publish","type":"post","link":"https:\/\/wirid-lab.umng.edu.co\/es\/2021\/06\/29\/nrf24l01-communication\/","title":{"rendered":"Comunicaci\u00f3n entre dispositivos NRF24L01"},"content":{"rendered":"<p><\/p>\n<h2><b>Introducci\u00f3n:<\/b><\/h2>\n<p>En el siguiente experimento se mostrar\u00e1 el paso a paso de c\u00f3mo realizar la comunicaci\u00f3n entre dos nodos IoT del laboratorio mediante los m\u00f3dulos NRF24L01 para almacenar los datos de temperatura y humedad utilizando la programaci\u00f3n en bloques de node-red, almacenar los datos en InfluxDB\u00a0 y finalmente reportar en tiempo real con Grafana.\u00a0<\/p>\n<p>Por otro lado el objetivo de este experimento es utilizar las capacidades que tienen los nodos para <a title=\"Control your Arduino Board with Node-Red\" href=\"https:\/\/wirid-lab.umng.edu.co\/2021\/05\/19\/control-your-arduino-board-with-node-red\/\" target=\"_blank\" rel=\"noopener\">reprogramar las tarjetas Arduino<\/a> y as\u00ed mismo configurar los m\u00f3dulos RF como\u00a0 transmisor o receptor y enviar los datos mediante comunicaci\u00f3n serial para ser procesada en node-red.<\/p>\n<p>Para este ejemplo vamos a crear un experimento con los <strong>wirid-lab-node-40 <\/strong>(Nodo RX)\u00a0y\u00a0<strong>wirid-lab-node-100\u00a0<\/strong>(Nodo TX)<\/p>\n<h4><strong>Aplicaciones utilizadas en este experimento<\/strong><\/h4>\n<p>Una vez creada las reservas, en cada nodo se podr\u00e1 acceder a las siguiente aplicaciones:<\/p>\n<ul>\n<li>Arduino-cli mediante interfaz web ssh\u00a0 (Contrase\u00f1a: <em>Token de la reserva<\/em>)<\/li>\n<li>Node-red<\/li>\n<li>InfluxDB 2.0 (Usuario: <em>guestuser\u00a0<\/em> Contrase\u00f1a:\u00a0 <em>Token de la reserva<\/em>)\u00a0<\/li>\n<li>Grafana (Usuario: admin Contrase\u00f1a: admin)<\/li>\n<\/ul>\n<p>Para acceder basta con hacer clic en el nombre del nodo y a continuaci\u00f3n se mostrar\u00e1 la lista de posibles accesos a sus aplicaciones.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3619 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/status-reserva-1024x259.png\" alt=\"\" width=\"1024\" height=\"259\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/status-reserva-1024x259.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/status-reserva-300x76.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/status-reserva-768x194.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/status-reserva.png 1238w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<h2>Diagrama de Conexi\u00f3n del Nodo<\/h2>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"aligncenter wp-image-3613\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-1024x892.png\" alt=\"\" width=\"600\" height=\"523\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-1024x892.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-300x261.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-768x669.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-1536x1338.png 1536w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/scheme-iot-rf-2048x1784.png 2048w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Configuraci\u00f3n Arduino Uno<\/h2>\n<p style=\"padding-left: 40px;\">\u00a0Los c\u00f3digos a configurar en cada nodo se encuentran en el repositorio <a href=\"https:\/\/github.com\/wirid-lab\/nrf24\">https:\/\/github.com\/wirid-lab\/nrf24<\/a> con la siguiente distribuci\u00f3n:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">rx\r\n|--rx.ino\r\ntx\r\n|--tx.ino\r\nrx-flow.json\r\ntx-flow.json<\/pre>\n<p style=\"padding-left: 40px;\">Se encuentran dos proyectos de Arduino (rx y tx) en carpetas separadas que contienen los c\u00f3digos para compilar en los Arduino UNO de cada nodo. Luego se encuentran dos archivos con el nombre <strong>xx-flow.json<\/strong>, Estos corresponden a los diagramas de flujo para implementarlos en Node-red.<\/p>\n<h3>Compilar Programa Arduino en wirid-lab-node-100 (Nodo TX)<\/h3>\n<p style=\"padding-left: 40px;\">Con la reserva del nodo en ejecuci\u00f3n, se procede a entrar a la aplicaci\u00f3n Arduino-CLI desde el navegador. Se ingresa el token como contrase\u00f1a en la interfaz web SSH. Luego<br \/>\nse ingresan los siguientes comandos para instalar las librer\u00edas del m\u00f3dulo RF y el sensor DHT.<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">arduino-cli lib install \"RF24\" &amp;&amp; \\\r\narduino-cli lib install \"DHT sensor library\" &amp;&amp; \\\r\narduino-cli lib install \"Adafruit Unified Sensor\"<\/pre>\n<p style=\"padding-left: 40px;\">En la siguiente figura se muestra el proceso de instalaci\u00f3n de las librer\u00edas mencionadas dentro de la aplicaci\u00f3n Arduino-CLI.<\/p>\n<p style=\"padding-left: 40px;\">\u00a0<\/p>\n<p style=\"padding-left: 40px;\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-3617 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/libreria_tx.png\" alt=\"\" width=\"660\" height=\"622\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/libreria_tx.png 660w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/libreria_tx-300x283.png 300w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/p>\n<p style=\"padding-left: 40px;\">Una vez instaladas las librer\u00edas, proceder a clonar el repositorio creado en github e ingresar a la carpeta creada utilizando los siguientes comandos:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">git clone https:\/\/github.com\/wirid-lab\/nrf24\r\ncd nrf24<\/pre>\n<p style=\"padding-left: 40px;\">Para validar el puerto de conexi\u00f3n y el tipo de tarjeta Arduino utilizada en el nodo ingresar el siguiente comando:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">arduino-cli board list<\/pre>\n<p style=\"padding-left: 40px;\">Inmediatamente se mostrar\u00e1 una lista con las tarjetas disponibles<\/p>\n<p style=\"padding-left: 40px;\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-3620 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/board_list_tx.png\" alt=\"\" width=\"668\" height=\"72\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/board_list_tx.png 668w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/board_list_tx-300x32.png 300w\" sizes=\"(max-width: 668px) 100vw, 668px\" \/><\/p>\n<p style=\"padding-left: 40px;\">\u00a0<\/p>\n<p style=\"padding-left: 40px;\">Una vez se valida la tarjeta conectada en el nodo, se procede a compilar y cargar el programa de transmisi\u00f3n al nodo, mediante el siguiente comando:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">arduino-cli compile -u -v -p \/dev\/ttyACM0 -b arduino:avr:uno tx<\/pre>\n<p style=\"padding-left: 40px;\">Este proceso tomar\u00e1 un tiempo para compilar y cargar el programa en la tarjeta Arduino, una vez finalice el proceso se mostrar\u00e1 el resultado como en la siguiente figura<\/p>\n<p style=\"padding-left: 40px;\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-3622 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/compilado_tx.png\" alt=\"\" width=\"791\" height=\"625\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/compilado_tx.png 791w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/compilado_tx-300x237.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/compilado_tx-768x607.png 768w\" sizes=\"(max-width: 791px) 100vw, 791px\" \/><\/p>\n<p style=\"padding-left: 40px;\">El programa cargado en la tarjeta Arduino se encarga de leer los valores del sensor DHT11, este valor es almacenado en dos variables que son enviadas mediante el m\u00f3dulo RF y al mismo tiempo enviadas por puerto Serial para comprobar la lectura de dichos sensores. Si quiere conocer el c\u00f3digo implementado dirigirse a <a href=\"https:\/\/github.com\/wirid-lab\/nrf24\/blob\/main\/tx\/tx.ino\">https:\/\/github.com\/wirid-lab\/nrf24\/blob\/main\/tx\/tx.ino<\/a>\u00a0\u00a0<\/p>\n<p style=\"padding-left: 40px;\">\u00a0<\/p>\n<p style=\"padding-left: 40px;\">Para revisar el correcto funcionamiento desde el terminal, basta con instalar la herramienta <strong>screen<\/strong> y acceder a los datos enviado por Serial utilizando los siguientes comandos:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">apt install -y screen\r\nscreen \/dev\/ttyACM0 9600<\/pre>\n<p style=\"padding-left: 40px;\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-3623 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/tx_data.png\" alt=\"\" width=\"600\" height=\"550\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/tx_data.png 600w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/tx_data-300x275.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<table style=\"width: 100%; border-collapse: collapse; border-style: solid; border-color: #fff461; background-color: #fff461; height: 24px; margin-left: 40px;\">\n<tbody style=\"padding-left: 40px;\">\n<tr style=\"height: 24px; padding-left: 40px;\">\n<td style=\"width: 100%; height: 24px; padding-left: 40px;\">Para salir de la pantalla\u00a0 utilizar la combinaci\u00f3n de teclas\u00a0 CTR + A + K<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3 style=\"padding-left: 40px;\">\u00a0<\/h3>\n<h3>Compilar Programa Arduino en wirid-lab-node-100 (Nodo TX)<\/h3>\n<p style=\"padding-left: 40px;\">\u00a0<\/p>\n<p style=\"padding-left: 40px;\">Se ingresa al nodo 04 al terminal SSH de la aplicaci\u00f3n Arduino-CLI para realizar las configuraciones respectivas para recibir los datos del modulo RF, para ello se debe utilizar los mismos pasos de instalaci\u00f3n de librer\u00edas, descargar repositorio, verificar la tarjeta y puerto Arduino conectada al nodo y compilar el programa mediante los siguientes comandos:<\/p>\n<pre class=\"EnlighterJSRAW\" style=\"padding-left: 40px;\" data-enlighter-language=\"generic\">arduino-cli lib install \"RF24\" &amp;&amp; \\\r\narduino-cli lib install \"DHT sensor library\" &amp;&amp; \\\r\narduino-cli lib install \"Adafruit Unified Sensor\"\r\n\r\n\r\ngit clone https:\/\/github.com\/wirid-lab\/nrf24\r\ncd nrf24\r\n\r\n\r\narduino-cli board list\r\narduino-cli compile -u -v -p \/dev\/ttyACM0 -b arduino:avr:uno rx\r\n\r\n\r\napt install -y screen\r\nscreen \/dev\/ttyACM0 9600<\/pre>\n<p style=\"padding-left: 40px;\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-3625 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/rx_data.png\" alt=\"\" width=\"396\" height=\"533\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/rx_data.png 396w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/rx_data-223x300.png 223w\" sizes=\"(max-width: 396px) 100vw, 396px\" \/><\/p>\n<p style=\"padding-left: 40px;\">Los datos mostrados en el receptor vienen codificados en formato JSON, este formato se utilizar\u00e1 para almacenar las variables y valores en InfluxDB.<\/p>\n<p>&nbsp;<\/p>\n<h2>Almacenamiento en InfluxDB<\/h2>\n<p>Para hacer uso del almacenamiento de los datos recibidos en el prototipo se utiliza la herramienta InfluxDB en la versi\u00f3n 2.0. Para integrar esta herramienta con node-red se necesita acceder al panel de control donde el usuario es guestuser y la contrase\u00f1a ser\u00e1 el token generado por el laboratorio. Una vez se ingresa al dashborard, basta con crear un token como se muestra en la siguiente figura.<\/p>\n<p>&nbsp;<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3627 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-token-1024x471.png\" alt=\"\" width=\"1024\" height=\"471\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-token-1024x471.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-token-300x138.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-token-768x353.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-token.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>&nbsp;<\/p>\n<h2>Implementaci\u00f3n node-red<\/h2>\n<p>Para la visualizaci\u00f3n de los datos recibidos por el Arduino mediante comunicaci\u00f3n serial se realiz\u00f3 la creaci\u00f3n de diferentes flujos de trabajo. Dentro en el repositorio <a href=\"https:\/\/github.com\/wirid-lab\/nrf24\">https:\/\/github.com\/wirid-lab\/nrf24<\/a>se encuentran dos archivos (tx-flow.json y rx-flow.json) que corresponden al procesamiento de los datos en el nodo receptor y en el nodo transmisor.<\/p>\n<h3>Nodo Transmisor\u00a0<\/h3>\n<p>En la siguiente figura se observa el diagrama de flujo utilizado para el nodo transmisor (wirid-lab-node-04) donde los datos recibidos por el Arduino se muestran en la pesta\u00f1a de logs dentro de la aplicaci\u00f3n. As\u00ed mismo se integr\u00f3 dentro de este flujo la opci\u00f3n de encender o apagar el m\u00f3dulo RF utilizando el pin16 de la RPi3 para activar o desactivar el Mosfet Irf520.\u00a0\u00a0<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3628 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_tx-1024x473.png\" alt=\"\" width=\"1024\" height=\"473\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_tx-1024x473.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_tx-300x139.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_tx-768x355.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_tx.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<h3>Nodo Receptor<\/h3>\n<p>El flujo del nodo receptor se muestra en la siguiente figura:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3629 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_rx-1024x470.png\" alt=\"\" width=\"1024\" height=\"470\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_rx-1024x470.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_rx-300x138.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_rx-768x353.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/node_red_rx.png 1365w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>Este diagrama permite tener reiniciar el Arduino utilizando el pin reset que se encuentra conectado al pin 18 de la RPi3.\u00a0 Tambi\u00e9n se tiene la opci\u00f3n de encender o<br \/>\napagar el m\u00f3dulo RF para dejar de recibir los datos del nodo TX. Al deshabilitar el modulo RF y volverlo a activar implica que la RPI debe volver a reiniciarse ya que debe establecer nuevamente conexi\u00f3n con el m\u00f3dulo RF.<\/p>\n<p>Finalmente se encuentran los bloques para conectar con el puerto serie y recibir los datos del Arduino para mostrarlos en la interfaz propia de node-red y almacenarlos en influxDB.<\/p>\n<h2>Reporte datos en Grafana<\/h2>\n<p>Para graficar los datos almacenados del nodo receptor en la base de datos InfluxDB y reportar en tiempo real se utiliza la herramienta Grafana. Esta herramienta logra conectarse<br \/>\ndirectamente con la base de datos y realizar las peticiones necesarias para extraer la informaci\u00f3n de cada medici\u00f3n.<\/p>\n<p>\nPara abrir la herramienta basta con acceder al link generado en la reserva donde el usuario y contrase\u00f1a. Una vez dentro de la herramienta se necesita agregar la base de datos en la secci\u00f3n datasource, tal como se muestra en la siguiente figura. Los datos de acceso es el nombre de la organizaci\u00f3n <strong>my-org<\/strong> y el token generado en InfluxDB<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3630 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-database-1024x469.png\" alt=\"\" width=\"1024\" height=\"469\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-database-1024x469.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-database-300x137.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-database-768x351.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-database.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>Una vez se guarda esta fuente de datos, grafana autom\u00e1ticamente realiza la prueba de conexi\u00f3n indicando si es posible conectarse a InfluxDB.<\/p>\n<p>Cuando el diagrama de flujo del nodo receptor se encuentra en ejecuci\u00f3n y almacenando los datos en InfluxDB se pueden dirigir al dashboard de InfluxDB y en la secci\u00f3n <strong>explore\u00a0<\/strong>se pueden revisar los datos enviados del nodo y una gr\u00e1fica que reporta los datos seleccionados. Para tener esta misma gr\u00e1fica en grafana,\u00a0 haga clic en el bot\u00f3n <em><strong>Scrip Editor\u00a0<\/strong><\/em>y podr\u00e1 copiar el query de la consulta.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3632 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-data-1024x471.png\" alt=\"\" width=\"1024\" height=\"471\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-data-1024x471.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-data-300x138.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-data-768x353.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/influx-data.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>Ir a la aplicaci\u00f3n grafana y crear un nuevo panel para mostrar los datos de temperatura y humedad que reporta el nodo transmisor, en este panel puede seleccionar el tiempo de intervalo de refresco de la gr\u00e1fica y filtrarlo por un rango de fechas.<\/p>\n<p>&nbsp;<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-3631 aligncenter\" src=\"http:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-data-real-time-1024x469.png\" alt=\"\" width=\"1024\" height=\"469\" srcset=\"https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-data-real-time-1024x469.png 1024w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-data-real-time-300x137.png 300w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-data-real-time-768x351.png 768w, https:\/\/wirid-lab.umng.edu.co\/wp-content\/uploads\/2021\/06\/grafana-data-real-time.png 1366w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p style=\"text-align: center;\">\u00a0<\/p>\n<p>&nbsp;<\/p>\n<h2>Video Tutorial<\/h2>\n<p style=\"text-align: center;\"><iframe loading=\"lazy\" src=\"\/\/www.youtube.com\/embed\/Y-bRjbvXvQ4\" width=\"1000\" height=\"560\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<p style=\"text-align: center;\">\u00a0<\/p>\n<p style=\"text-align: center;\">\u00a0<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p><\/p>","protected":false},"excerpt":{"rendered":"<p>Introducci\u00f3n: En el siguiente experimento se mostrar\u00e1 el paso a paso de c\u00f3mo realizar la comunicaci\u00f3n entre dos nodos IoT del laboratorio mediante los m\u00f3dulos NRF24L01 para almacenar los datos de temperatura y humedad utilizando la programaci\u00f3n en bloques de node-red, almacenar los datos en InfluxDB\u00a0 y finalmente reportar en tiempo real con Grafana.\u00a0 Por [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":3638,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_mi_skip_tracking":false},"categories":[3],"tags":[],"_links":{"self":[{"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/posts\/3606"}],"collection":[{"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/comments?post=3606"}],"version-history":[{"count":15,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/posts\/3606\/revisions"}],"predecessor-version":[{"id":3637,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/posts\/3606\/revisions\/3637"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/media\/3638"}],"wp:attachment":[{"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/media?parent=3606"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/categories?post=3606"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/wirid-lab.umng.edu.co\/es\/wp-json\/wp\/v2\/tags?post=3606"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}